#!/bin/bash

# 设置输入文件和输出文件
input_file="input.txt"     # 请将这里的 "input.txt" 修改为你的输入文件路径
retained_file="retained.txt"  # 保留的内容输出到这个文件
deleted_file="deleted.txt"   # 被删除的内容输出到这个文件

# 用于标记是否处于删除模式
delete_mode=false

# 开始时间
start_time=$(date +%s)

# 创建输出文件并开始逐行处理
{
    while IFS= read -r line; do
        # 如果当前行是以:61:开头
        if [[ "$line" == :61:* ]]; then
            # 提取postingdate和currentdate
            postingdate=$(echo "$line" | cut -c7-10)
            currentdate=$(echo "$line" | cut -c11-14)
            
            # 打印这两个日期
            echo "Posting Date: $postingdate, Current Date: $currentdate"
            
            # 判断日期是否相等
            if [ "$postingdate" == "$currentdate" ]; then
                # 如果相等，进入删除模式并写入到删除文件
                echo "Dates are equal, entering delete mode and deleting this line"
                delete_mode=true
                echo "$line" >> "$deleted_file"  # 写入到删除文件
            else
                # 如果日期不相等并且处于删除模式，退出删除模式
                if [ "$delete_mode" == true ]; then
                    echo "Dates are not equal, exiting delete mode"
                    delete_mode=false
                fi
                # 如果不在删除模式，保留当前行并写入保留文件
                if [ "$delete_mode" == false ]; then
                    echo "$line" >> "$retained_file"
                fi
            fi
        elif [[ "$line" == :62F:* ]]; then
            # 如果是以:62F:开头，退出删除模式并保留当前行
            if [ "$delete_mode" == true ]; then
                echo "Encountered :62F:, exiting delete mode"
                delete_mode=false
            fi
            # 保留当前行并写入保留文件
            echo "$line" >> "$retained_file"
        else
            # 如果不在删除模式，保留当前行
            if [ "$delete_mode" == false ]; then
                echo "$line" >> "$retained_file"
            else
                # 如果在删除模式，写入到删除文件
                echo "$line" >> "$deleted_file"
            fi
        fi
    done
} < "$input_file"

# 结束时间
end_time=$(date +%s)

# 计算时间差
elapsed=$((end_time - start_time))
elapsed_minutes=$((elapsed / 60))
elapsed_seconds=$((elapsed % 60))

# 打印时间
echo "Start time: $(date -d @$start_time)"
echo "End time: $(date -d @$end_time)"
echo "Elapsed time: $elapsed_minutes minutes and $elapsed_seconds seconds"
