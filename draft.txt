#!/bin/bash

# Check if the correct number of arguments is given
if [ "$#" -ne 2 ]; then
    echo "Usage: $0 <pgdb_username> <pgdb_password>"
    exit 1
fi

PGDB_USER=$1
PGDB_PASSWORD=$2

# Database connection information
ORACLE1_HOST="oracle1_host"
ORACLE1_PORT="1521"
ORACLE1_SID="orcl1"
ORACLE1_USER="oracle1_user"
ORACLE1_PASSWORD="oracle1_password"

ORACLE2_HOST="oracle2_host"
ORACLE2_PORT="1521"
ORACLE2_SID="orcl2"
ORACLE2_USER="oracle2_user"
ORACLE2_PASSWORD="oracle2_password"

PGDB_HOST="pgdb_host"
PGDB_PORT="5432"
PGDB_DBNAME="pgdb_dbname"

# SQL files paths
ORACLE1_SQL_FILES=("sql/oracle1_query1.sql" "sql/oracle1_query2.sql" "sql/oracle1_query3.sql")
ORACLE2_SQL_FILES=("sql/oracle2_query1.sql")
PGDB_SQL_FILES=("sql/pgdb_query1.sql" "sql/pgdb_query2.sql")

# Output file
OUTPUT_FILE="output.csv"

# Function to run Oracle queries and save to CSV
run_oracle_query() {
    local sql_file=$1
    local host=$2
    local port=$3
    local sid=$4
    local user=$5
    local password=$6
    sqlplus -S ${user}/${password}@${host}:${port}/${sid} << EOF >> $OUTPUT_FILE
set colsep ','
set pagesize 0
set feedback off
set heading on
@$sql_file
EOF
}

# Function to run PostgreSQL queries and save to CSV
run_pg_query() {
    local sql_file=$1
    local user=$2
    local password=$3
    local host=$4
    local port=$5
    local dbname=$6
    PGPASSWORD=${password} psql -h ${host} -p ${port} -d ${dbname} -U ${user} -f ${sql_file} -A -F',' --no-align -t >> $OUTPUT_FILE
}

# Clear output file before starting
> $OUTPUT_FILE

# Run Oracle1 queries
for sql_file in "${ORACLE1_SQL_FILES[@]}"; do
    run_oracle_query $sql_file $ORACLE1_HOST $ORACLE1_PORT $ORACLE1_SID $ORACLE1_USER $ORACLE1_PASSWORD
    echo "" >> $OUTPUT_FILE # Add a blank line between results
done

# Run Oracle2 queries
for sql_file in "${ORACLE2_SQL_FILES[@]}"; do
    run_oracle_query $sql_file $ORACLE2_HOST $ORACLE2_PORT $ORACLE2_SID $ORACLE2_USER $ORACLE2_PASSWORD
    echo "" >> $OUTPUT_FILE # Add a blank line between results
done

# Run PostgreSQL queries
for sql_file in "${PGDB_SQL_FILES[@]}"; do
    run_pg_query $sql_file $PGDB_USER $PGDB_PASSWORD $PGDB_HOST $PGDB_PORT $PGDB_DBNAME
    echo "" >> $OUTPUT_FILE # Add a blank line between results
done

echo "All queries have been executed and saved to $OUTPUT_FILE."
