#!/bin/bash

# 获取当前时间用于计算处理耗时
start_time=$(date +%s)

# 输入文件和输出文件
input_file="$1"
output_file="$2"

# 创建一个临时文件用于存储输出
temp_file=$(mktemp)

# 删除模式标志
delete_mode=false

# 遍历输入文件的每一行
while IFS= read -r line
do
    # 如果行以 :61: 开头，处理日期
    if [[ "$line" =~ ^:61: ]]; then
        postingdate="${line:6:4}"
        currentdate="${line:10:4}"
        echo "Found :61: line, postingdate=$postingdate, currentdate=$currentdate"

        # 判断 postingdate 和 currentdate 是否相等
        if [[ "$postingdate" == "$currentdate" ]]; then
            # 如果相等，进入删除模式，跳过该行
            if [[ "$delete_mode" == false ]]; then
                delete_mode=true
                echo "Entering delete mode. Deleting this line and subsequent lines until next :61: or :62: line."
            fi
            continue
        fi
    fi

    # 如果处于删除模式，检查是否遇到下一个 :61: 或 :62: 行
    if [[ "$delete_mode" == true ]]; then
        if [[ "$line" =~ ^:61: || "$line" =~ ^:62: ]]; then
            delete_mode=false
            echo "Exit delete mode."
        fi
        # 跳过删除模式中的行
        continue
    fi

    # 将非删除的行写入临时文件
    echo "$line" >> "$temp_file"
done < "$input_file"

# 将临时文件内容写入输出文件
mv "$temp_file" "$output_file"

# 获取结束时间并计算耗时
end_time=$(date +%s)
elapsed_time=$((end_time - start_time))

# 打印开始时间、结束时间以及耗时
echo "Process started at: $(date -d @$start_time)"
echo "Process ended at: $(date -d @$end_time)"
echo "Total time taken: $((elapsed_time / 60)) minutes $((elapsed_time % 60)) seconds"
